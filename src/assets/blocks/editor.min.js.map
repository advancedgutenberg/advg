{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/assets/js/editor.jsx"],"names":["wp","advgb_blocks_vars","gutenberg_init_function","window","list_blocks","granted_blocks","blocks","savedBlocks","active_blocks","Object","inactive_blocks","blockItemIcon","blockItem","name","icon","title","category","parent","savedIcon","missing_block","console","new_settings","core_blocks","document","list_categories","jQuery","url","method","data","action","blocksList","JSON","categoriesList","nonce","success"],"mappings":"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","file":"editor.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","if (typeof wp !== 'undefined' && typeof wp.domReady !== 'undefined'){\n    wp.domReady(()=>{\n\n        if(advgb_blocks_vars.blocks.active_blocks === 'undefined' || advgb_blocks_vars.blocks.active_blocks.length === 0) {\n            // No Block Access defined for this role, so we stop the process here\n            return;\n        }\n\n        let gutenberg_init_function = null;\n        if (typeof window._wpLoadBlockEditor !== 'undefined') {\n            gutenberg_init_function = window._wpLoadBlockEditor;\n        }\n\n        if (gutenberg_init_function !== null) {\n            // Wait for Gutenberg editor to be ready\n            gutenberg_init_function.then(() => {\n                if (advgb_blocks_vars.original_settings.allowedBlockTypes !== true) {\n                    // allowed_block_types filter has been used, in this case we do nothing as we don't know why blocks have been filtered\n                    return;\n                }\n\n                let list_blocks = [];\n                let granted_blocks = [];\n                let missing_block = false;\n                // Retrieve all registered blocks\n                let blocks = wp.blocks.getBlockTypes();\n                const savedBlocks = {\n                    active_blocks: Object.values(advgb_blocks_vars.blocks.active_blocks),\n                    inactive_blocks: Object.values(advgb_blocks_vars.blocks.inactive_blocks),\n                };\n\n                for (let block in blocks) {\n                    var blockItemIcon = '';\n                    var blockItem = {\n                        name: blocks[block].name,\n                        icon: blocks[block].icon.src,\n                        title: blocks[block].title,\n                        category: blocks[block].category,\n                        parent: blocks[block].parent\n                    };\n\n                    var savedIcon = !!blocks[block].icon.src ? blocks[block].icon.src : blocks[block].icon;\n\n                    if (blocks[block].icon.foreground !== undefined) blockItem.iconColor = blocks[block].icon.foreground;\n\n                    if (typeof savedIcon === 'function') {\n                        if(typeof savedIcon.prototype !== 'undefined') {\n                            blockItem.icon = wp.element.renderToString(wp.element.createElement(savedIcon));\n                            blockItem.icon = blockItem.icon.replace(/stopcolor/g, 'stop-color');\n                            blockItem.icon = blockItem.icon.replace(/stopopacity/g, 'stop-opacity');\n                        } else {\n                            blockItemIcon = wp.element.createElement(wp.components.Dashicon, {icon: 'block-default'});\n                            blockItem.icon = wp.element.renderToString(blockItemIcon);\n                        }\n                    } else if (typeof savedIcon === 'object') {\n                        blockItem.icon = wp.element.renderToString(savedIcon);\n                        blockItem.icon = blockItem.icon.replace(/stopcolor/g, 'stop-color');\n                        blockItem.icon = blockItem.icon.replace(/stopopacity/g, 'stop-opacity');\n                    } else if (typeof savedIcon === 'string') {\n                        blockItemIcon = wp.element.createElement(wp.components.Dashicon, {icon: savedIcon});\n                        blockItem.icon = wp.element.renderToString(blockItemIcon);\n                    }\n                    list_blocks.push(blockItem);\n\n\n                    // Compare current block with the list of blocks we have\n                    if (savedBlocks.active_blocks.indexOf(blocks[block].name) >= 0) {\n                        // Block is active\n                        granted_blocks.push(blocks[block].name);\n                    } else if (savedBlocks.inactive_blocks.indexOf(blocks[block].name) >= 0) {\n                        // Block is inactive\n                    } else {\n                        // This block is not in our database yet, but by default we allow the usage\n                        granted_blocks.push(blocks[block].name);\n                        missing_block = true;\n                    }\n                }\n\n                //console.log('missing_block: ' + missing_block);\n\n                if (missing_block) {\n                    if (console !== undefined && console.error !== undefined) {\n                        // Let's output as log instead of error\n                        console.log('Reloading editor by PublishPress Blocks plugin');\n                    }\n                    // Replace original allowed block settings by our modified list\n                    let new_settings = advgb_blocks_vars.original_settings;\n\n                    // Unregister core blocks to avoid registering twice later through wp.editPost.initializeEditor\n                    const core_blocks = [\n                        'core/paragraph',\n                        'core/image',\n                        'core/heading',\n                        'core/list',\n                        'core/quote',\n                        'core/archives',\n                        'core/audio',\n                        'core/button',\n                        'core/buttons',\n                        'core/calendar',\n                        'core/categories',\n                        'core/code',\n                        'core/columns',\n                        'core/column',\n                        'core/cover',\n                        'core/embed',\n                        'core/group',\n                        'core/freeform',\n                        'core/html',\n                        'core/media-text',\n                        'core/latest-comments',\n                        'core/latest-posts',\n                        'core/list-item',\n                        'core/missing',\n                        'core/more',\n                        'core/nextpage',\n                        'core/page-list',\n                        'core/preformatted',\n                        'core/pullquote',\n                        'core/rss',\n                        'core/search',\n                        'core/separator',\n                        'core/block',\n                        'core/social-links',\n                        'core/social-link',\n                        'core/spacer',\n                        'core/table',\n                        'core/tag-cloud',\n                        'core/text-columns',\n                        'core/verse',\n                        'core/video',\n                        'core/site-logo',\n                        'core/site-tagline',\n                        'core/site-title',\n                        'core/query',\n                        'core/post-template',\n                        'core/query-title',\n                        'core/query-pagination',\n                        'core/query-pagination-next',\n                        'core/query-pagination-numbers',\n                        'core/query-pagination-previous',\n                        'core/post-title',\n                        'core/post-content',\n                        'core/post-date',\n                        'core/post-excerpt',\n                        'core/post-featured-image',\n                        'core/post-terms',\n                        'core/loginout',\n                        'core/gallery',\n                        'core/shortcode',\n                        'core/file',\n                        'core/pattern',\n                        'core/navigation',\n                        'core/navigation-link',\n                        'core/navigation-submenu',\n                        'core/template-part',\n                        'core/post-author',\n                        'core/post-navigation-link',\n                        'core/post-comments',\n                        'core/term-description',\n                        'core/avatar',\n                        'core/query-no-results',\n                        'core/read-more',\n                        'core/comment-author-name',\n                        'core/comment-content',\n                        'core/comment-date',\n                        'core/comment-edit-link',\n                        'core/comment-reply-link',\n                        'core/comment-template',\n                        'core/comments',\n                        'core/comments-title',\n                        'core/comments-query-loop',\n                        'core/comments-pagination',\n                        'core/comments-pagination-next',\n                        'core/comments-pagination-numbers',\n                        'core/comments-pagination-previous',\n                        'core/post-comments-form',\n                        'core/home-link',\n                        'core/post-author-biography'\n                    ];\n\n                    core_blocks.forEach( function( element ) {\n                        if ( wp.data.select( 'core/blocks' ).getBlockType( element ) ) {\n                            wp.blocks.unregisterBlockType( element );\n                        }\n                    });\n\n                    new_settings.allowedBlockTypes = granted_blocks;\n                    const target = document.getElementById('editor');\n\n                    // Initialize again the editor\n                    wp.editPost.initializeEditor('editor', advgb_blocks_vars.post_type, advgb_blocks_vars.post_id, new_settings, []);\n\n                    var list_categories = wp.blocks.getCategories();\n\n                    try {\n                        // Use this ajax query to update the block list in db\n                        jQuery.ajax({\n                            url: advgb_blocks_vars.ajaxurl,\n                            method: 'POST',\n                            data: {\n                                action: 'advgb_update_blocks_list',\n                                blocksList: JSON.stringify(list_blocks),\n                                categoriesList: JSON.stringify(list_categories),\n                                nonce: advgb_blocks_vars.nonce\n                            },\n                            success: function (data) {\n                                //console.log(data);\n                            }\n                        });\n                    } catch (e) {\n                        //console.log(e);\n                    }\n                }\n            });\n        }\n    });\n\n}\n"],"sourceRoot":""}